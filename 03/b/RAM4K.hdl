// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=outdmux0, b=outdmux1, c=outdmux2, d=outdmux3, e=outdmux4, f=outdmux5, g=outdmux6, h=outdmux7);
    RAM512(in=in, load=outdmux0, out=outram0, address=address[3..11]);
    RAM512(in=in, load=outdmux1, out=outram1, address=address[3..11]);
    RAM512(in=in, load=outdmux2, out=outram2, address=address[3..11]);
    RAM512(in=in, load=outdmux3, out=outram3, address=address[3..11]);
    RAM512(in=in, load=outdmux4, out=outram4, address=address[3..11]);
    RAM512(in=in, load=outdmux5, out=outram5, address=address[3..11]);
    RAM512(in=in, load=outdmux6, out=outram6, address=address[3..11]);
    RAM512(in=in, load=outdmux7, out=outram7, address=address[3..11]);
    Mux8Way16(a=outram0, b=outram1, c=outram2, d=outram3, e=outram4, f=outram5, g=outram6, h=outram7, sel=address[0..2], out=out);
}
